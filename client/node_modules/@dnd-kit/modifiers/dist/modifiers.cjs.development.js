'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function createSnapModifier(gridSize) {
  return function (_ref) {
    var transform = _ref.transform;
    return _extends({}, transform, {
      x: Math.ceil(transform.x / gridSize) * gridSize,
      y: Math.ceil(transform.y / gridSize) * gridSize
    });
  };
}

var restrictToHorizontalAxis = function restrictToHorizontalAxis(_ref) {
  var transform = _ref.transform;
  return _extends({}, transform, {
    y: 0
  });
};

function restrictToBoundingRect(transform, rect, boundingRect) {
  var value = _extends({}, transform);

  if (rect.top + transform.y <= boundingRect.top) {
    value.y = boundingRect.top - rect.top;
  } else if (rect.bottom + transform.y >= boundingRect.top + boundingRect.height) {
    value.y = boundingRect.top + boundingRect.height - rect.bottom;
  }

  if (rect.left + transform.x <= boundingRect.left) {
    value.x = boundingRect.left - rect.left;
  } else if (rect.right + transform.x >= boundingRect.left + boundingRect.width) {
    value.x = boundingRect.left + boundingRect.width - rect.right;
  }

  return value;
}

var restrictToParentElement = function restrictToParentElement(_ref) {
  var transform = _ref.transform,
      activeNodeRect = _ref.activeNodeRect,
      containerNodeRect = _ref.containerNodeRect;

  if (!activeNodeRect || !containerNodeRect) {
    return transform;
  }

  return restrictToBoundingRect(transform, activeNodeRect, containerNodeRect);
};

var restrictToFirstScrollableAncestor = function restrictToFirstScrollableAncestor(_ref) {
  var transform = _ref.transform,
      activeNodeRect = _ref.activeNodeRect,
      scrollableAncestorRects = _ref.scrollableAncestorRects;
  var firstScrollableAncestorRect = scrollableAncestorRects[0];

  if (!activeNodeRect || !firstScrollableAncestorRect) {
    return transform;
  }

  return restrictToBoundingRect(transform, activeNodeRect, firstScrollableAncestorRect);
};

var restrictToVerticalAxis = function restrictToVerticalAxis(_ref) {
  var transform = _ref.transform;
  return _extends({}, transform, {
    x: 0
  });
};

var restrictToWindowEdges = function restrictToWindowEdges(_ref) {
  var transform = _ref.transform,
      activeNodeRect = _ref.activeNodeRect,
      windowRect = _ref.windowRect;

  if (!activeNodeRect || !windowRect) {
    return transform;
  }

  return restrictToBoundingRect(transform, activeNodeRect, windowRect);
};

exports.createSnapModifier = createSnapModifier;
exports.restrictToFirstScrollableAncestor = restrictToFirstScrollableAncestor;
exports.restrictToHorizontalAxis = restrictToHorizontalAxis;
exports.restrictToParentElement = restrictToParentElement;
exports.restrictToVerticalAxis = restrictToVerticalAxis;
exports.restrictToWindowEdges = restrictToWindowEdges;
//# sourceMappingURL=modifiers.cjs.development.js.map
