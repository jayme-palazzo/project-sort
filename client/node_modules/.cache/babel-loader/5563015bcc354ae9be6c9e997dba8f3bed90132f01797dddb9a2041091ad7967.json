{"ast":null,"code":"import axios from 'axios';\nclass CategoryService {\n  constructor() {\n    this.baseURL = 'http://localhost:5000/api/categories';\n  }\n  async getCategories() {\n    try {\n      const response = await axios.get(this.baseURL);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  async createCategory(name) {\n    try {\n      const response = await axios.post(this.baseURL, {\n        name\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  async deleteCategory(id) {\n    try {\n      const response = await axios.delete(`${this.baseURL}/${id}`);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  handleError(error) {\n    var _error$response, _error$response$data;\n    return new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred');\n  }\n}\nexport default new CategoryService();","map":{"version":3,"names":["axios","CategoryService","constructor","baseURL","getCategories","response","get","data","error","handleError","createCategory","name","post","deleteCategory","id","delete","_error$response","_error$response$data","Error","message"],"sources":["C:/Users/Jayme/Project Sort/repos/project-sort/client/src/services/CategoryService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass CategoryService {\r\n  constructor() {\r\n    this.baseURL = 'http://localhost:5000/api/categories';\r\n  }\r\n\r\n  async getCategories() {\r\n    try {\r\n      const response = await axios.get(this.baseURL);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async createCategory(name) {\r\n    try {\r\n      const response = await axios.post(this.baseURL, { name });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async deleteCategory(id) {\r\n    try {\r\n      const response = await axios.delete(`${this.baseURL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    return new Error(error.response?.data?.message || 'An error occurred');\r\n  }\r\n}\r\n\r\nexport default new CategoryService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,CAAC;EACpBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,sCAAsC;EACvD;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;MAC9C,OAAOE,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;IAC/B;EACF;EAEA,MAAME,cAAcA,CAACC,IAAI,EAAE;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE;QAAEQ;MAAK,CAAC,CAAC;MACzD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;IAC/B;EACF;EAEA,MAAMK,cAAcA,CAACC,EAAE,EAAE;IACvB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACe,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIW,EAAE,EAAE,CAAC;MAC5D,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;IAC/B;EACF;EAEAC,WAAWA,CAACD,KAAK,EAAE;IAAA,IAAAQ,eAAA,EAAAC,oBAAA;IACjB,OAAO,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBT,IAAI,cAAAU,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,mBAAmB,CAAC;EACxE;AACF;AAEA,eAAe,IAAIlB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}