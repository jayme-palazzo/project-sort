{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayme\\\\Project Sort\\\\repos\\\\project-sort\\\\client\\\\src\\\\screens\\\\AddItemScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Paper, TextField, Button, Typography, Box, Grid, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Snackbar, Alert, Autocomplete, Chip } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport InventoryService from '../services/InventoryService';\nimport CategoryService from '../services/CategoryService';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddItemScreen() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [item, setItem] = useState({\n    name: '',\n    description: '',\n    quantity: '',\n    price: '',\n    category: null,\n    location: ''\n  });\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newCategoryDialog, setNewCategoryDialog] = useState(false);\n  const [newCategoryName, setNewCategoryName] = useState('');\n\n  // Fetch categories and item data (if editing)\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch categories\n        const categoriesData = await CategoryService.getCategories();\n        setCategories(categoriesData);\n\n        // If editing, fetch item data\n        if (id) {\n          const itemData = await InventoryService.getItem(id);\n          setItem({\n            ...itemData,\n            category: categoriesData.find(c => c._id === itemData.category._id)\n          });\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const itemData = {\n        ...item,\n        category: item.category._id,\n        quantity: Number(item.quantity),\n        price: Number(item.price)\n      };\n      if (id) {\n        await InventoryService.updateItem(id, itemData);\n      } else {\n        await InventoryService.createItem(itemData);\n      }\n      navigate('/inventory');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleCreateCategory = async () => {\n    try {\n      if (!newCategoryName.trim()) {\n        setError('Category name cannot be empty');\n        return;\n      }\n      const newCategory = await CategoryService.createCategory(newCategoryName);\n      setCategories([...categories, newCategory]);\n      setItem(prev => ({\n        ...prev,\n        category: newCategory\n      }));\n      setNewCategoryDialog(false);\n      setNewCategoryName('');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setItem(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: id ? 'Edit Item' : 'Add New Item'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Name\",\n              name: \"name\",\n              value: item.name,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Description\",\n              name: \"description\",\n              value: item.description,\n              onChange: handleChange,\n              multiline: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              value: item.quantity,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Price\",\n              name: \"price\",\n              type: \"number\",\n              value: item.price,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: item.category,\n              onChange: (event, newValue) => {\n                if (newValue === 'create-new') {\n                  setNewCategoryDialog(true);\n                } else {\n                  setItem(prev => ({\n                    ...prev,\n                    category: newValue\n                  }));\n                }\n              },\n              options: [...categories, 'create-new'],\n              getOptionLabel: option => {\n                if (option === 'create-new') return 'Create new category...';\n                return option.name;\n              },\n              renderOption: (props, option) => {\n                if (option === 'create-new') {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    ...props,\n                    children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n                      sx: {\n                        mr: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 25\n                    }, this), \"Create new category...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  ...props,\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: option.isDefault ? 'Default' : 'Custom',\n                    color: option.isDefault ? 'primary' : 'secondary',\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 23\n                  }, this), option.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Category\",\n                required: true,\n                error: !item.category,\n                helperText: !item.category ? 'Please select a category' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Location\",\n              name: \"location\",\n              value: item.location,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => navigate('/inventory'),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                children: [id ? 'Update' : 'Add', \" Item\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: newCategoryDialog,\n      onClose: () => setNewCategoryDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter a name for your new category. This will be available for your future items.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Category Name\",\n          fullWidth: true,\n          value: newCategoryName,\n          onChange: e => setNewCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNewCategoryDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateCategory,\n          color: \"primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(AddItemScreen, \"E7BkDWwPvo4S6ETqj2T3I9579mM=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = AddItemScreen;\nexport default AddItemScreen;\nvar _c;\n$RefreshReg$(_c, \"AddItemScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Container","Paper","TextField","Button","Typography","Box","Grid","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","Alert","Autocomplete","Chip","AddIcon","InventoryService","CategoryService","useAuth","jsxDEV","_jsxDEV","AddItemScreen","_s","id","navigate","user","item","setItem","name","description","quantity","price","category","location","categories","setCategories","loading","setLoading","error","setError","newCategoryDialog","setNewCategoryDialog","newCategoryName","setNewCategoryName","fetchData","categoriesData","getCategories","itemData","getItem","find","c","_id","message","handleSubmit","e","preventDefault","Number","updateItem","createItem","handleCreateCategory","trim","newCategory","createCategory","prev","handleChange","value","target","maxWidth","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","variant","component","gutterBottom","onSubmit","container","spacing","xs","fullWidth","label","onChange","required","multiline","rows","sm","type","event","newValue","options","getOptionLabel","option","renderOption","props","mr","size","isDefault","color","renderInput","params","helperText","display","justifyContent","gap","onClick","open","onClose","autoFocus","margin","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["C:/Users/Jayme/Project Sort/repos/project-sort/client/src/screens/AddItemScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n  Autocomplete,\r\n  Chip\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport InventoryService from '../services/InventoryService';\r\nimport CategoryService from '../services/CategoryService';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction AddItemScreen() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  \r\n  const [item, setItem] = useState({\r\n    name: '',\r\n    description: '',\r\n    quantity: '',\r\n    price: '',\r\n    category: null,\r\n    location: ''\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [newCategoryDialog, setNewCategoryDialog] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n\r\n  // Fetch categories and item data (if editing)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch categories\r\n        const categoriesData = await CategoryService.getCategories();\r\n        setCategories(categoriesData);\r\n\r\n        // If editing, fetch item data\r\n        if (id) {\r\n          const itemData = await InventoryService.getItem(id);\r\n          setItem({\r\n            ...itemData,\r\n            category: categoriesData.find(c => c._id === itemData.category._id)\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const itemData = {\r\n        ...item,\r\n        category: item.category._id,\r\n        quantity: Number(item.quantity),\r\n        price: Number(item.price)\r\n      };\r\n\r\n      if (id) {\r\n        await InventoryService.updateItem(id, itemData);\r\n      } else {\r\n        await InventoryService.createItem(itemData);\r\n      }\r\n      navigate('/inventory');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleCreateCategory = async () => {\r\n    try {\r\n      if (!newCategoryName.trim()) {\r\n        setError('Category name cannot be empty');\r\n        return;\r\n      }\r\n\r\n      const newCategory = await CategoryService.createCategory(newCategoryName);\r\n      setCategories([...categories, newCategory]);\r\n      setItem(prev => ({ ...prev, category: newCategory }));\r\n      setNewCategoryDialog(false);\r\n      setNewCategoryName('');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setItem(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n        <Typography>Loading...</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n          {id ? 'Edit Item' : 'Add New Item'}\r\n        </Typography>\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={item.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={item.description}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Quantity\"\r\n                name=\"quantity\"\r\n                type=\"number\"\r\n                value={item.quantity}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                type=\"number\"\r\n                value={item.price}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                value={item.category}\r\n                onChange={(event, newValue) => {\r\n                  if (newValue === 'create-new') {\r\n                    setNewCategoryDialog(true);\r\n                  } else {\r\n                    setItem(prev => ({ ...prev, category: newValue }));\r\n                  }\r\n                }}\r\n                options={[...categories, 'create-new']}\r\n                getOptionLabel={(option) => {\r\n                  if (option === 'create-new') return 'Create new category...';\r\n                  return option.name;\r\n                }}\r\n                renderOption={(props, option) => {\r\n                  if (option === 'create-new') {\r\n                    return (\r\n                      <li {...props}>\r\n                        <AddIcon sx={{ mr: 1 }} />\r\n                        Create new category...\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li {...props}>\r\n                      <Chip\r\n                        size=\"small\"\r\n                        label={option.isDefault ? 'Default' : 'Custom'}\r\n                        color={option.isDefault ? 'primary' : 'secondary'}\r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                      {option.name}\r\n                    </li>\r\n                  );\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Category\"\r\n                    required\r\n                    error={!item.category}\r\n                    helperText={!item.category ? 'Please select a category' : ''}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Location\"\r\n                name=\"location\"\r\n                value={item.location}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => navigate('/inventory')}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  {id ? 'Update' : 'Add'} Item\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* New Category Dialog */}\r\n      <Dialog open={newCategoryDialog} onClose={() => setNewCategoryDialog(false)}>\r\n        <DialogTitle>Create New Category</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter a name for your new category. This will be available for your future items.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Category Name\"\r\n            fullWidth\r\n            value={newCategoryName}\r\n            onChange={(e) => setNewCategoryName(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setNewCategoryDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleCreateCategory} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Error Snackbar */}\r\n      <Snackbar \r\n        open={!!error} \r\n        autoHideDuration={6000} \r\n        onClose={() => setError('')}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddItemScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}