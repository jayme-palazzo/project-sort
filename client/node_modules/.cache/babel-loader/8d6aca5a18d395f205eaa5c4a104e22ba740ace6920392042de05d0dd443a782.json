{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayme\\\\Project Sort\\\\repos\\\\project-sort\\\\client\\\\src\\\\components\\\\LocationSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Autocomplete, Box, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@mui/material';\nimport LocationService from '../services/LocationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LocationSelect({\n  value,\n  onChange,\n  error,\n  helperText\n}) {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newLocationDialogOpen, setNewLocationDialogOpen] = useState(false);\n  const [newLocationName, setNewLocationName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const data = await LocationService.getAllLocations();\n        setLocations(data);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLocations();\n  }, []);\n  const handleCreateLocation = async () => {\n    try {\n      if (!newLocationName.trim()) {\n        setErrorMessage('Location name cannot be empty');\n        return;\n      }\n      const newLocation = await LocationService.createLocation(newLocationName.trim());\n      setLocations(prev => [...prev, newLocation]);\n      setNewLocationDialogOpen(false);\n      setNewLocationName('');\n      // Select the newly created location\n      onChange(newLocation._id);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: locations.find(loc => loc._id === value) || null,\n      onChange: (event, newValue) => {\n        onChange((newValue === null || newValue === void 0 ? void 0 : newValue._id) || '');\n      },\n      options: locations,\n      getOptionLabel: option => option.name,\n      loading: loading,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Location\",\n        error: error,\n        helperText: helperText,\n        InputProps: {\n          ...params.InputProps,\n          endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [params.InputProps.endAdornment, /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: () => setNewLocationDialogOpen(true),\n              sx: {\n                ml: 1\n              },\n              children: \"+ New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: newLocationDialogOpen,\n      onClose: () => setNewLocationDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter a name for the new location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Location Name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newLocationName,\n          onChange: e => setNewLocationName(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleCreateLocation();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNewLocationDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateLocation,\n          color: \"primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      variant: \"body2\",\n      sx: {\n        mt: 1\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationSelect, \"XHflUnskrTNJCRxpZB987K750Qw=\");\n_c = LocationSelect;\nexport default LocationSelect;\nvar _c;\n$RefreshReg$(_c, \"LocationSelect\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Autocomplete","Box","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","LocationService","jsxDEV","_jsxDEV","Fragment","_Fragment","LocationSelect","value","onChange","error","helperText","_s","locations","setLocations","loading","setLoading","newLocationDialogOpen","setNewLocationDialogOpen","newLocationName","setNewLocationName","errorMessage","setErrorMessage","fetchLocations","data","getAllLocations","message","handleCreateLocation","trim","newLocation","createLocation","prev","_id","children","find","loc","event","newValue","options","getOptionLabel","option","name","renderInput","params","label","InputProps","endAdornment","size","onClick","sx","ml","fileName","_jsxFileName","lineNumber","columnNumber","open","onClose","autoFocus","margin","type","fullWidth","variant","e","target","onKeyPress","key","color","mt","_c","$RefreshReg$"],"sources":["C:/Users/Jayme/Project Sort/repos/project-sort/client/src/components/LocationSelect.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Autocomplete,\r\n  Box,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material';\r\nimport LocationService from '../services/LocationService';\r\n\r\nfunction LocationSelect({ value, onChange, error, helperText }) {\r\n  const [locations, setLocations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [newLocationDialogOpen, setNewLocationDialogOpen] = useState(false);\r\n  const [newLocationName, setNewLocationName] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      try {\r\n        const data = await LocationService.getAllLocations();\r\n        setLocations(data);\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  const handleCreateLocation = async () => {\r\n    try {\r\n      if (!newLocationName.trim()) {\r\n        setErrorMessage('Location name cannot be empty');\r\n        return;\r\n      }\r\n      const newLocation = await LocationService.createLocation(newLocationName.trim());\r\n      setLocations(prev => [...prev, newLocation]);\r\n      setNewLocationDialogOpen(false);\r\n      setNewLocationName('');\r\n      // Select the newly created location\r\n      onChange(newLocation._id);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Autocomplete\r\n        value={locations.find(loc => loc._id === value) || null}\r\n        onChange={(event, newValue) => {\r\n          onChange(newValue?._id || '');\r\n        }}\r\n        options={locations}\r\n        getOptionLabel={(option) => option.name}\r\n        loading={loading}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Location\"\r\n            error={error}\r\n            helperText={helperText}\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {params.InputProps.endAdornment}\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={() => setNewLocationDialogOpen(true)}\r\n                    sx={{ ml: 1 }}\r\n                  >\r\n                    + New\r\n                  </Button>\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Dialog\r\n        open={newLocationDialogOpen}\r\n        onClose={() => setNewLocationDialogOpen(false)}\r\n      >\r\n        <DialogTitle>Create New Location</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter a name for the new location.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Location Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={newLocationName}\r\n            onChange={(e) => setNewLocationName(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleCreateLocation();\r\n              }\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setNewLocationDialogOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleCreateLocation} color=\"primary\">Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {errorMessage && (\r\n        <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\r\n          {errorMessage}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LocationSelect; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}