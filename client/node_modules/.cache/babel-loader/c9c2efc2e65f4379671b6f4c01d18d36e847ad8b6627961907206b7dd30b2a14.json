{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayme\\\\Project Sort\\\\repos\\\\project-sort\\\\client\\\\src\\\\screens\\\\AddItemScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Paper, TextField, Button, Typography, Box, Grid, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Snackbar, Alert, Autocomplete, Chip, CircularProgress } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport InventoryService from '../services/InventoryService';\nimport CategoryService from '../services/CategoryService';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddItemScreen() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [item, setItem] = useState({\n    name: '',\n    description: '',\n    quantity: '',\n    price: '',\n    category: null,\n    location: ''\n  });\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [newCategoryDialog, setNewCategoryDialog] = useState(false);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n\n  // Fetch categories and item data (if editing)\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch categories\n        const categoriesData = await CategoryService.getCategories();\n        setCategories(categoriesData);\n\n        // If editing, fetch item data\n        if (id) {\n          const itemData = await InventoryService.getItem(id);\n          setItem({\n            ...itemData,\n            category: categoriesData.find(c => c._id === itemData.category._id)\n          });\n        }\n      } catch (error) {\n        setError(error.message || 'Failed to load data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const validateForm = () => {\n    if (!item.name.trim()) {\n      setError('Name is required');\n      return false;\n    }\n    if (!item.quantity || item.quantity < 0) {\n      setError('Quantity must be a positive number');\n      return false;\n    }\n    if (!item.price || item.price < 0) {\n      setError('Price must be a positive number');\n      return false;\n    }\n    if (!item.category) {\n      setError('Category is required');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setHasSubmitted(true);\n    if (!validateForm()) return;\n    try {\n      setSaving(true);\n      const itemData = {\n        ...item,\n        category: item.category._id,\n        quantity: Number(item.quantity),\n        price: Number(item.price)\n      };\n      if (id) {\n        await InventoryService.updateItem(id, itemData);\n      } else {\n        await InventoryService.createItem(itemData);\n      }\n      navigate('/inventory');\n    } catch (error) {\n      setError(error.message || 'Failed to save item');\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleCreateCategory = async () => {\n    try {\n      if (!newCategoryName.trim()) {\n        setError('Category name cannot be empty');\n        return;\n      }\n      const newCategory = await CategoryService.createCategory(newCategoryName);\n      setCategories(prev => [...prev, newCategory]);\n      setItem(prev => ({\n        ...prev,\n        category: newCategory\n      }));\n      setNewCategoryDialog(false);\n      setNewCategoryName('');\n    } catch (error) {\n      setError(error.message || 'Failed to create category');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setItem(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Helper function to determine if we should show field errors\n  const shouldShowError = field => {\n    return hasSubmitted && !field;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"50vh\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: id ? 'Edit Item' : 'Add New Item'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Name\",\n              name: \"name\",\n              value: item.name,\n              onChange: handleChange,\n              required: true,\n              error: shouldShowError(item.name.trim()),\n              helperText: shouldShowError(item.name.trim()) ? 'Name is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Description\",\n              name: \"description\",\n              value: item.description,\n              onChange: handleChange,\n              multiline: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              value: item.quantity,\n              onChange: handleChange,\n              required: true,\n              error: shouldShowError(item.quantity) || hasSubmitted && item.quantity < 0,\n              helperText: shouldShowError(item.quantity) ? 'Quantity is required' : hasSubmitted && item.quantity < 0 ? 'Quantity must be a positive number' : '',\n              inputProps: {\n                min: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Price\",\n              name: \"price\",\n              type: \"number\",\n              value: item.price,\n              onChange: handleChange,\n              required: true,\n              error: shouldShowError(item.price) || hasSubmitted && item.price < 0,\n              helperText: shouldShowError(item.price) ? 'Price is required' : hasSubmitted && item.price < 0 ? 'Price must be a positive number' : '',\n              inputProps: {\n                min: 0,\n                step: \"0.01\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: item.category,\n              onChange: (event, newValue) => {\n                if (newValue === 'create-new') {\n                  setNewCategoryDialog(true);\n                } else {\n                  setItem(prev => ({\n                    ...prev,\n                    category: newValue\n                  }));\n                }\n              },\n              options: [...categories, 'create-new'],\n              getOptionLabel: option => {\n                if (option === 'create-new') return 'Create new category...';\n                return option.name;\n              },\n              renderOption: (props, option, state) => {\n                const {\n                  key,\n                  ...otherProps\n                } = props;\n                if (option === 'create-new') {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    ...otherProps,\n                    children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n                      sx: {\n                        mr: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, this), \"Create new category...\"]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  ...otherProps,\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: option.isDefault ? 'Default' : 'Custom',\n                    color: option.isDefault ? 'primary' : 'secondary',\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this), option.name]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Category\",\n                required: true,\n                error: shouldShowError(item.category),\n                helperText: shouldShowError(item.category) ? 'Please select a category' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this),\n              isOptionEqualToValue: (option, value) => {\n                if (option === 'create-new') return false;\n                return option._id === (value === null || value === void 0 ? void 0 : value._id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Location\",\n              name: \"location\",\n              value: item.location,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => navigate('/inventory'),\n                disabled: saving,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: saving,\n                children: saving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20,\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), id ? 'Updating...' : 'Adding...']\n                }, void 0, true) : id ? 'Update Item' : 'Add Item'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: newCategoryDialog,\n      onClose: () => setNewCategoryDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter a name for your new category. This will be available for your future items.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Category Name\",\n          fullWidth: true,\n          value: newCategoryName,\n          onChange: e => setNewCategoryName(e.target.value),\n          error: !newCategoryName.trim(),\n          helperText: !newCategoryName.trim() ? 'Category name cannot be empty' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNewCategoryDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateCategory,\n          color: \"primary\",\n          disabled: !newCategoryName.trim(),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(''),\n        severity: \"error\",\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(AddItemScreen, \"X7VsLk9Yx84GW00/oJuAFfn/250=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = AddItemScreen;\nexport default AddItemScreen;\nvar _c;\n$RefreshReg$(_c, \"AddItemScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Container","Paper","TextField","Button","Typography","Box","Grid","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","Alert","Autocomplete","Chip","CircularProgress","AddIcon","InventoryService","CategoryService","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AddItemScreen","_s","id","navigate","user","item","setItem","name","description","quantity","price","category","location","categories","setCategories","loading","setLoading","saving","setSaving","error","setError","newCategoryDialog","setNewCategoryDialog","newCategoryName","setNewCategoryName","hasSubmitted","setHasSubmitted","fetchData","categoriesData","getCategories","itemData","getItem","find","c","_id","message","validateForm","trim","handleSubmit","e","preventDefault","Number","updateItem","createItem","handleCreateCategory","newCategory","createCategory","prev","handleChange","value","target","shouldShowError","field","maxWidth","sx","mt","children","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","variant","component","gutterBottom","onSubmit","container","spacing","xs","fullWidth","label","onChange","required","helperText","multiline","rows","sm","type","inputProps","min","step","event","newValue","options","getOptionLabel","option","renderOption","props","state","key","otherProps","mr","size","isDefault","color","renderInput","params","isOptionEqualToValue","gap","onClick","disabled","open","onClose","autoFocus","margin","autoHideDuration","anchorOrigin","vertical","horizontal","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/Jayme/Project Sort/repos/project-sort/client/src/screens/AddItemScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n  Autocomplete,\r\n  Chip,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport InventoryService from '../services/InventoryService';\r\nimport CategoryService from '../services/CategoryService';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction AddItemScreen() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  \r\n  const [item, setItem] = useState({\r\n    name: '',\r\n    description: '',\r\n    quantity: '',\r\n    price: '',\r\n    category: null,\r\n    location: ''\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [newCategoryDialog, setNewCategoryDialog] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n\r\n  // Fetch categories and item data (if editing)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch categories\r\n        const categoriesData = await CategoryService.getCategories();\r\n        setCategories(categoriesData);\r\n\r\n        // If editing, fetch item data\r\n        if (id) {\r\n          const itemData = await InventoryService.getItem(id);\r\n          setItem({\r\n            ...itemData,\r\n            category: categoriesData.find(c => c._id === itemData.category._id)\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setError(error.message || 'Failed to load data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const validateForm = () => {\r\n    if (!item.name.trim()) {\r\n      setError('Name is required');\r\n      return false;\r\n    }\r\n    if (!item.quantity || item.quantity < 0) {\r\n      setError('Quantity must be a positive number');\r\n      return false;\r\n    }\r\n    if (!item.price || item.price < 0) {\r\n      setError('Price must be a positive number');\r\n      return false;\r\n    }\r\n    if (!item.category) {\r\n      setError('Category is required');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setHasSubmitted(true);\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      setSaving(true);\r\n      const itemData = {\r\n        ...item,\r\n        category: item.category._id,\r\n        quantity: Number(item.quantity),\r\n        price: Number(item.price)\r\n      };\r\n\r\n      if (id) {\r\n        await InventoryService.updateItem(id, itemData);\r\n      } else {\r\n        await InventoryService.createItem(itemData);\r\n      }\r\n      navigate('/inventory');\r\n    } catch (error) {\r\n      setError(error.message || 'Failed to save item');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateCategory = async () => {\r\n    try {\r\n      if (!newCategoryName.trim()) {\r\n        setError('Category name cannot be empty');\r\n        return;\r\n      }\r\n\r\n      const newCategory = await CategoryService.createCategory(newCategoryName);\r\n      setCategories(prev => [...prev, newCategory]);\r\n      setItem(prev => ({ ...prev, category: newCategory }));\r\n      setNewCategoryDialog(false);\r\n      setNewCategoryName('');\r\n    } catch (error) {\r\n      setError(error.message || 'Failed to create category');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setItem(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Helper function to determine if we should show field errors\r\n  const shouldShowError = (field) => {\r\n    return hasSubmitted && !field;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n          {id ? 'Edit Item' : 'Add New Item'}\r\n        </Typography>\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={item.name}\r\n                onChange={handleChange}\r\n                required\r\n                error={shouldShowError(item.name.trim())}\r\n                helperText={shouldShowError(item.name.trim()) ? 'Name is required' : ''}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={item.description}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Quantity\"\r\n                name=\"quantity\"\r\n                type=\"number\"\r\n                value={item.quantity}\r\n                onChange={handleChange}\r\n                required\r\n                error={shouldShowError(item.quantity) || (hasSubmitted && item.quantity < 0)}\r\n                helperText={\r\n                  shouldShowError(item.quantity) \r\n                    ? 'Quantity is required' \r\n                    : hasSubmitted && item.quantity < 0 \r\n                      ? 'Quantity must be a positive number' \r\n                      : ''\r\n                }\r\n                inputProps={{ min: 0 }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                type=\"number\"\r\n                value={item.price}\r\n                onChange={handleChange}\r\n                required\r\n                error={shouldShowError(item.price) || (hasSubmitted && item.price < 0)}\r\n                helperText={\r\n                  shouldShowError(item.price) \r\n                    ? 'Price is required' \r\n                    : hasSubmitted && item.price < 0 \r\n                      ? 'Price must be a positive number' \r\n                      : ''\r\n                }\r\n                inputProps={{ min: 0, step: \"0.01\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                value={item.category}\r\n                onChange={(event, newValue) => {\r\n                  if (newValue === 'create-new') {\r\n                    setNewCategoryDialog(true);\r\n                  } else {\r\n                    setItem(prev => ({ ...prev, category: newValue }));\r\n                  }\r\n                }}\r\n                options={[...categories, 'create-new']}\r\n                getOptionLabel={(option) => {\r\n                  if (option === 'create-new') return 'Create new category...';\r\n                  return option.name;\r\n                }}\r\n                renderOption={(props, option, state) => {\r\n                  const { key, ...otherProps } = props;\r\n                  \r\n                  if (option === 'create-new') {\r\n                    return (\r\n                      <li key={key} {...otherProps}>\r\n                        <AddIcon sx={{ mr: 1 }} />\r\n                        Create new category...\r\n                      </li>\r\n                    );\r\n                  }\r\n                  \r\n                  return (\r\n                    <li key={key} {...otherProps}>\r\n                      <Chip\r\n                        size=\"small\"\r\n                        label={option.isDefault ? 'Default' : 'Custom'}\r\n                        color={option.isDefault ? 'primary' : 'secondary'}\r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                      {option.name}\r\n                    </li>\r\n                  );\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Category\"\r\n                    required\r\n                    error={shouldShowError(item.category)}\r\n                    helperText={shouldShowError(item.category) ? 'Please select a category' : ''}\r\n                  />\r\n                )}\r\n                isOptionEqualToValue={(option, value) => {\r\n                  if (option === 'create-new') return false;\r\n                  return option._id === value?._id;\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Location\"\r\n                name=\"location\"\r\n                value={item.location}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => navigate('/inventory')}\r\n                  disabled={saving}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={saving}\r\n                >\r\n                  {saving ? (\r\n                    <>\r\n                      <CircularProgress size={20} sx={{ mr: 1 }} />\r\n                      {id ? 'Updating...' : 'Adding...'}\r\n                    </>\r\n                  ) : (\r\n                    id ? 'Update Item' : 'Add Item'\r\n                  )}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* New Category Dialog */}\r\n      <Dialog \r\n        open={newCategoryDialog} \r\n        onClose={() => setNewCategoryDialog(false)}\r\n      >\r\n        <DialogTitle>Create New Category</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter a name for your new category. This will be available for your future items.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Category Name\"\r\n            fullWidth\r\n            value={newCategoryName}\r\n            onChange={(e) => setNewCategoryName(e.target.value)}\r\n            error={!newCategoryName.trim()}\r\n            helperText={!newCategoryName.trim() ? 'Category name cannot be empty' : ''}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setNewCategoryDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleCreateCategory} \r\n            color=\"primary\"\r\n            disabled={!newCategoryName.trim()}\r\n          >\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Error Snackbar */}\r\n      <Snackbar \r\n        open={!!error} \r\n        autoHideDuration={6000} \r\n        onClose={() => setError('')}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert \r\n          onClose={() => setError('')} \r\n          severity=\"error\" \r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddItemScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}