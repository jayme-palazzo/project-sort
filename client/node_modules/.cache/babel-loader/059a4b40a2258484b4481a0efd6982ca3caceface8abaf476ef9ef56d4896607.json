{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass LocationService {\n  static async createLocation(name) {\n    try {\n      const response = await axios.post(`${API_URL}/locations`, {\n        name\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to create location');\n    }\n  }\n  static async getAllLocations() {\n    try {\n      const response = await axios.get(`${API_URL}/locations`);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch locations');\n    }\n  }\n}\nexport default LocationService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","LocationService","createLocation","name","response","post","data","error","_error$response","_error$response$data","Error","message","getAllLocations","get","_error$response2","_error$response2$data"],"sources":["C:/Users/Jayme/Project Sort/repos/project-sort/client/src/services/LocationService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass LocationService {\r\n  static async createLocation(name) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/locations`, { name });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to create location');\r\n    }\r\n  }\r\n\r\n  static async getAllLocations() {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/locations`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to fetch locations');\r\n    }\r\n  }\r\n}\r\n\r\nexport default LocationService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,eAAe,CAAC;EACpB,aAAaC,cAAcA,CAACC,IAAI,EAAE;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,YAAY,EAAE;QAAEM;MAAK,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,2BAA2B,CAAC;IAC/E;EACF;EAEA,aAAaC,eAAeA,CAAA,EAAG;IAC7B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,YAAY,CAAC;MACxD,OAAOO,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIL,KAAK,CAAC,EAAAI,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,2BAA2B,CAAC;IAC/E;EACF;AACF;AAEA,eAAeV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}